<?php
// $Id: gradebook_responses.install,v 1.1.2.5 2010/08/20 02:59:27 mgn Exp $

/**
 * @file
 * gradebook_responses.install: Install schema for gradebook_responses
 */

/**
 * Implements hook_schema().
 */

function gradebook_responses_schema() {
  $schema['gradebook_responses'] = array(
    'fields' => array(
      'nid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'aid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'uid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'rstatus'     => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'size' => 'tiny'),
      'rearned'      => array('type' => 'float', 'unsigned' => FALSE, 'not null' => FALSE),
      'rnote'        => array('type' => 'text', 'unsigned' => FALSE, 'not null' => FALSE, 'size' => 'big'),
      'rtimestamp'   => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ),
    'indexes' => array(
      'aid' => array('aid'),
      'uid' => array('uid'),
      'rstatus' => array('rstatus'),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function gradebook_responses_schema_alter(&$schema) {
  // Gradebook Responses adds these fields to the gradebookapi_assignment table.

  $schema['gradebookapi_assignment']['fields']['response_types'] = array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'description' => 'A comma delimited list of allowed response types for this assignment.',
  );

  $schema['gradebookapi_assignment']['fields']['max_responses'] = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );

  $schema['gradebookapi_assignment']['fields']['response_deadline'] = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => FALSE,
    'size' => 'tiny',
  );

// Gradebook Responses adds this field to the gradebookapi_grade table.

  $schema['gradebookapi_grade']['fields']['redo'] = array(
    'type' => 'int',
    'unsigned' => FALSE,
    'not null' => TRUE,
    'size' => 'tiny',
    'default' => 0,
  );
}

/**
 * Implements hook_install().
 */
function gradebook_responses_install() {
  // Create tables.
  drupal_install_schema('gradebook_responses');

  // Add new fields to the gradebookapi_assignment database table.
  db_add_field($ret, 'gradebookapi_assignment', 'response_types', array('type' => 'varchar', 'length' => 255, 'not null' => FALSE, 'description' => "A comma delimited list of allowed response types for this assignment."));
  db_add_field($ret, 'gradebookapi_assignment', 'max_responses', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
  db_add_field($ret, 'gradebookapi_assignment', 'response_deadline', array('type' => 'int', 'unsigned' => TRUE, 'not null' => FALSE, 'size' => 'tiny'));
  // Add new fields to the gradebookapi_grade database table.
  db_add_field($ret, 'gradebookapi_grade', 'redo', array('type' => 'int', 'unsigned' => FALSE, 'not null' => TRUE, 'size' => 'tiny', 'default' => 0));
  // Ensure that submodules have a greater weight than gradebookapi.
  $weight = (int) db_result(db_query("SELECT weight FROM {system} WHERE name = 'gradebookapi'"));
  db_query("UPDATE {system} SET weight = %d WHERE name = 'gradebook_responses'", $weight + 1);
}

/**
 * Implements hook_uninstall().
 */
function gradebook_responses_uninstall() {

  // Remove added fields
  $ret = array();
  db_drop_field($ret, 'gradebookapi_assignment', 'response_types');
  db_drop_field($ret, 'gradebookapi_assignment', 'max_responses');
  db_drop_field($ret, 'gradebookapi_assignment', 'response_deadline');
  db_drop_field($ret, 'gradebookapi_grade', 'redo');

  // Remove tables.
  drupal_uninstall_schema('gradebook_responses');
}

/**
 * Implements hook_update_N().
 */
function gradebook_responses_update_6200() {
  $ret = array();
  // Ensure that submodules have a greater weight than gradebookapi
  $weight = (int) db_result(db_query("SELECT weight FROM {system} WHERE name = 'gradebookapi'"));
  ++$weight;
  $ret[] = update_sql("UPDATE {system} SET weight = $weight WHERE name = 'gradebook_responses'");

  return $ret;
}

/**
 * Adds the response_types field to the gradebookapi_assignment database table.
 */
function gradebook_responses_update_6201() {
  $ret = array();
  db_add_field($ret, 'gradebookapi_assignment', 'response_types', array('type' => 'varchar', 'length' => 255, 'not null' => FALSE, 'description' => 'A comma delimited list of allowed response types for this assignment.'));

 return $ret;
}

/**
 * Adds the max_responses field to the gradebookapi_assignment database table.
 */
function gradebook_responses_update_6202() {
  $ret = array();
  db_add_field($ret, 'gradebookapi_assignment', 'max_responses', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));

  return $ret;
}

/**
 * Adds the redo field to the gradebookapi_grade database table.
 */
function gradebook_responses_update_6203() {
  $ret = array();
db_add_field($ret, 'gradebookapi_grade', 'redo', array('type' => 'int', 'unsigned' => FALSE, 'not null' => TRUE, 'size' => 'tiny', 'default' => 0));

  return $ret;
}

/**
 * Adds the response_deadline field to the gradebookapi_grade database table.
 */
function gradebook_responses_update_6204() {
  $ret = array();

  // Add field to gradebookapi_assignment to indicate whether postdeadline responses are allowed for a given assignment.
  db_add_field($ret, 'gradebookapi_assignment', 'response_deadline', array('type' => 'int', 'unsigned' => TRUE, 'not null' => FALSE, 'size' => 'tiny'));

  return $ret;
}

/**
 * Adds the rearned and rtimesteamp fields to the gradebook_responses database table.
 */
function gradebook_responses_update_6205() {
  $ret = array();
  db_add_field($ret, 'gradebook_responses', 'rearned', array('type' => 'float', 'unsigned' => FALSE, 'not null' => FALSE));
  db_add_field($ret, 'gradebook_responses', 'rtimestamp', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
  db_add_field($ret, 'gradebook_responses', 'rnote', array('type' => 'text', 'unsigned' => FALSE, 'not null' => FALSE, 'size' => 'big'));
  return $ret;
}