<?php
// $Id: gradebook_attachments.install,v 1.1.2.3 2010/06/13 01:31:28 mgn Exp $

/**
 * @file
 * gradebook_attachments.install: Install schema for gradebook_attachments
 */

/**
 * Implements hook_schema().
 */
function gradebook_attachments_schema() {
  // This was moved from gradebookapi.install
  // I would like to rename it, but don't see how to do this using the drupal 6 api.
  $schema['gradebookapi_files'] = array(
    'fields' => array(
      'uid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'nid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'fid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'list'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'size' => 'tiny',
                             'description' => 'Whether the file should be visibly listed on the grade note.'),
      'description' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE),
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'uid' => array('uid'),
      'fid' => array('fid'),
    ),
    'primary key' => array('fid', 'nid'),
  );

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function gradebook_attachments_schema_alter(&$schema) {
  // Gradebook attachments adds these fields to the gradebookapi_assignment table.

  $schema['gradebookapi_assignment']['fields']['attach_status'] = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => FALSE,
    'size' => 'tiny',
  );
}

/**
 * Implements hook_install().
 */

function gradebook_attachments_install() {
  // Create tables.
  drupal_install_schema('gradebook_attachments');

  // Add field to gradebookapi_assignment to indicate whether attachments are allowed for a given assignment.
  db_add_field($ret, 'gradebookapi_assignment', 'attach_status', array('type' => 'int', 'unsigned' => TRUE, 'not null' => FALSE, 'size' => 'tiny'));
  // Ensure that submodules have a greater weight than gradebookapi.
  $weight = (int) db_result(db_query("SELECT weight FROM {system} WHERE name = 'gradebookapi'"));
  db_query("UPDATE {system} SET weight = %d WHERE name = 'gradebook_attachments'", $weight + 1);
}

/**
 * Implements hook_uninstall().
 */
function gradebook_attachments_uninstall() {

  // All gradebook UI modules should delete their taxonomy trees

  // Remove added fields
  $ret = array();
  db_drop_field($ret, 'gradebookapi_assignment', 'attach_status');

  // Remove all attached files when module is uninstalled
  $result = db_query('SELECT DISTINCT nid FROM {gradebookapi_files}');
  while ($nid = db_result($result)) {
    $files = gradebook_attachments_load_attachment($nid);
    foreach ($files as $file) {
      gradebook_attachments_remove_file($file);
    }
  }

  // Remove tables
  drupal_uninstall_schema('gradebook_attachments');

  // Delete all variables.
  db_query("DELETE FROM {variable} WHERE name LIKE 'gradebook_attachment%%'");

  return $ret;
}

function gradebook_attachments_update_6001() {
  // Ensure that submodules have a greater weight than gradebookapi
  $weight = (int) db_result(db_query("SELECT weight FROM {system} WHERE name = 'gradebookapi'"));
  db_query("UPDATE {system} SET weight = %d WHERE name = 'gradebook_attachments'", $weight + 1);
}

function gradebook_attachments_update_6002() {
  $ret = array();

  // Add field to gradebookapi_assignment to indicate whether attachments are allowed for a given assignment.
  db_add_field($ret, 'gradebookapi_assignment', 'attach_status', array('type' => 'int', 'unsigned' => TRUE, 'not null' => FALSE, 'size' => 'tiny'));

  return $ret;
}
